@model IntegralInvesting.Models.UserFundViewModel

@{
    ViewData["Title"] = "DepositFunds";
}

<h1>Deposit Funds into Bank Account</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-controller="BankAccount" asp-action="DepositTransaction" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="UserFundId" />
            <input type="hidden" asp-for="UserId" />
            <div class="form-group">
                <label asp-for="CurrentFunds" class="control-label"></label>
                <input readonly asp-for="CurrentFunds" class="form-control" />
                <span asp-validation-for="CurrentFunds" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CurrentTransferAccount" class="control-label"></label>
                <select asp-for="CurrentTransferAccount" class="form-select">
                    @{
                        var bankAccountNames = (List<string>)ViewData["BankAccountNames"];

                        foreach (string name in bankAccountNames)
                        {
                            <option>@name</option>
                        }
                    }
                </select>
                <span asp-validation-for="CurrentTransferAccount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CurrentTransferAmount" class="control-label"></label>
                <input type="number" min="0" max="@Model.CurrentFunds" asp-for="CurrentTransferAmount" class="form-control" />
                <span asp-validation-for="CurrentTransferAmount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Deposit Funds" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
